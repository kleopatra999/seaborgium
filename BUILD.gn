# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

group("seaborgium") {
  source_set("sglib") {
    deps = [
      ":re2",
    ]

    sources = [
      "src/gfx_win.cc",
      "src/docking_resizer.cc",
      "src/docking_split_container.cc",
      "src/docking_tool_window.cc",
      "src/docking_workspace.cc",
      "src/focus.cc",
      "src/scroll_helper.cc",
      "src/skin.cc",
      "src/text_edit.cc",
      "src/tool_window_dragger.cc",
      "src/tree_grid.cc",
      "src/widget.cc",
      "src/source_view/cpp_lexer.cc",
      "src/source_view/lexer.cc",
      "src/source_view/lexer_state.cc",
      "src/source_view/source_view.cc",
    ]

    include_dirs = [
      "//third_party/re2",
    ]
  }

  source_set("re2") {
    sources = [
      "third_party/re2/re2/bitstate.cc",
      "third_party/re2/re2/compile.cc",
      "third_party/re2/re2/dfa.cc",
      "third_party/re2/re2/filtered_re2.cc",
      "third_party/re2/re2/filtered_re2.h",
      "third_party/re2/re2/mimics_pcre.cc",
      "third_party/re2/re2/nfa.cc",
      "third_party/re2/re2/onepass.cc",
      "third_party/re2/re2/parse.cc",
      "third_party/re2/re2/perl_groups.cc",
      "third_party/re2/re2/prefilter.cc",
      "third_party/re2/re2/prefilter.h",
      "third_party/re2/re2/prefilter_tree.cc",
      "third_party/re2/re2/prefilter_tree.h",
      "third_party/re2/re2/prog.cc",
      "third_party/re2/re2/prog.h",
      "third_party/re2/re2/re2.cc",
      "third_party/re2/re2/re2.h",
      "third_party/re2/re2/regexp.cc",
      "third_party/re2/re2/regexp.h",
      "third_party/re2/re2/set.cc",
      "third_party/re2/re2/set.h",
      "third_party/re2/re2/simplify.cc",
      "third_party/re2/re2/stringpiece.h",
      "third_party/re2/re2/tostring.cc",
      "third_party/re2/re2/unicode_casefold.cc",
      "third_party/re2/re2/unicode_casefold.h",
      "third_party/re2/re2/unicode_groups.cc",
      "third_party/re2/re2/unicode_groups.h",
      "third_party/re2/re2/variadic_function.h",
      "third_party/re2/re2/walker-inl.h",
      "third_party/re2/util/arena.cc",
      "third_party/re2/util/arena.h",
      "third_party/re2/util/atomicops.h",
      "third_party/re2/util/flags.h",
      "third_party/re2/util/hash.cc",
      "third_party/re2/util/logging.h",
      "third_party/re2/util/mutex.h",
      "third_party/re2/util/rune.cc",
      "third_party/re2/util/sparse_array.h",
      "third_party/re2/util/sparse_set.h",
      "third_party/re2/util/stringpiece.cc",
      "third_party/re2/util/stringprintf.cc",
      "third_party/re2/util/strutil.cc",
      "third_party/re2/util/utf.h",
      "third_party/re2/util/util.h",
    ]

    include_dirs = [
      "//third_party/re2",
    ]
  }

  executable("sg") {
    deps = [
      ":sglib",
    ]

    sources = [
      "src/entry.cc",
      "src/main.cc",
      "src/sg.rc",
    ]

    include_dirs = [
      "//third_party/nanovg/src",
    ]

    libs = [
      "gdi32.lib",
      "user32.lib",
    ]
  }

  executable("sg_test") {
    deps = [
      ":sglib",
    ]
    sources = [
      "src/test_stubs.cc",
      "src/docking_test.cc",
      "src/source_view/lexer_test.cc",
      "src/tree_grid_test.cc",

      "third_party/gtest-1.7.0/src/gtest_main.cc",
      "third_party/gtest-1.7.0/src/gtest-all.cc",
    ]

    include_dirs = [
      "//third_party/re2",
      "third_party/gtest-1.7.0/include",
      "third_party/gtest-1.7.0",
    ]

    defines = [
      "GTEST_HAS_SEH=0",
    ]

    libs = [
      "gdi32.lib",
      "user32.lib",
    ]
  }
}
