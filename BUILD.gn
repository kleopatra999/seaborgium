# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

group("seaborgium") {
  source_set("sglib") {
    deps = [
      ":glew",
      ":nanovg",
      ":re2",
    ]

    sources = [
      "src/core/gfx.cc",
      "src/ui/docking_resizer.cc",
      "src/ui/docking_split_container.cc",
      "src/ui/docking_tool_window.cc",
      "src/ui/docking_workspace.cc",
      "src/ui/drawing_common.cc",
      "src/ui/focus.cc",
      "src/ui/skin.cc",
      "src/ui/text_edit.cc",
      "src/ui/tool_window_dragger.cc",
      "src/ui/tree_grid.cc",
      "src/ui/widget.cc",
      "src/ui/source_view/cpp_lexer.cc",
      "src/ui/source_view/lexer.cc",
      "src/ui/source_view/lexer_state.cc",
    ]

    include_dirs = [
      "//third_party/glew-1.10.0/include",
      "//third_party/nanovg/src",
      "//third_party/re2",
    ]

    defines = [
      "GLEW_STATIC",
    ]
  }

  source_set("glew") {
    sources = [
      "third_party/glew-1.10.0/src/glew.c",
    ]

    include_dirs = [
      "//third_party/glew-1.10.0/include",
    ]

    defines = [
      "GLEW_STATIC",
    ]
  }

  source_set("nanovg") {
    deps = [
      ":freetype2",
    ]

    sources = [
      "third_party/nanovg/src/nanovg.c",
    ]

    include_dirs = [
      "//third_party/nanovg/src",
      "//third_party/freetype-2.5.5/include",
    ]

    defines = [
      "FONS_USE_FREETYPE",
    ]
  }

  source_set("freetype2") {
    sources = [
      "third_party/freetype-2.5.5/src/autofit/autofit.c",
      "third_party/freetype-2.5.5/src/bdf/bdf.c",
      "third_party/freetype-2.5.5/src/cff/cff.c",
      "third_party/freetype-2.5.5/src/base/ftbase.c",
      "third_party/freetype-2.5.5/src/base/ftlcdfil.c",
      "third_party/freetype-2.5.5/src/cache/ftcache.c",
      "third_party/freetype-2.5.5/src/base/ftbitmap.c",
      "third_party/freetype-2.5.5/src/base/ftglyph.c",
      "third_party/freetype-2.5.5/src/gzip/ftgzip.c",
      "third_party/freetype-2.5.5/src/base/ftinit.c",
      "third_party/freetype-2.5.5/src/lzw/ftlzw.c",
      "third_party/freetype-2.5.5/src/base/ftsystem.c",
      "third_party/freetype-2.5.5/src/smooth/smooth.c",
      "third_party/freetype-2.5.5/src/base/ftmm.c",
      "third_party/freetype-2.5.5/src/pcf/pcf.c",
      "third_party/freetype-2.5.5/src/pfr/pfr.c",
      "third_party/freetype-2.5.5/src/psaux/psaux.c",
      "third_party/freetype-2.5.5/src/pshinter/pshinter.c",
      "third_party/freetype-2.5.5/src/psnames/psmodule.c",
      "third_party/freetype-2.5.5/src/raster/raster.c",
      "third_party/freetype-2.5.5/src/sfnt/sfnt.c",
      "third_party/freetype-2.5.5/src/truetype/truetype.c",
      "third_party/freetype-2.5.5/src/type1/type1.c",
      "third_party/freetype-2.5.5/src/cid/type1cid.c",
      "third_party/freetype-2.5.5/src/type42/type42.c",
      "third_party/freetype-2.5.5/src/winfonts/winfnt.c",
    ]

    include_dirs = [
      "third_party/freetype-2.5.5/include",
    ]

    defines = [
      "FT2_BUILD_LIBRARY",
    ]
  }

  source_set("re2") {
    sources = [
      "third_party/re2/re2/bitstate.cc",
      "third_party/re2/re2/compile.cc",
      "third_party/re2/re2/dfa.cc",
      "third_party/re2/re2/filtered_re2.cc",
      "third_party/re2/re2/filtered_re2.h",
      "third_party/re2/re2/mimics_pcre.cc",
      "third_party/re2/re2/nfa.cc",
      "third_party/re2/re2/onepass.cc",
      "third_party/re2/re2/parse.cc",
      "third_party/re2/re2/perl_groups.cc",
      "third_party/re2/re2/prefilter.cc",
      "third_party/re2/re2/prefilter.h",
      "third_party/re2/re2/prefilter_tree.cc",
      "third_party/re2/re2/prefilter_tree.h",
      "third_party/re2/re2/prog.cc",
      "third_party/re2/re2/prog.h",
      "third_party/re2/re2/re2.cc",
      "third_party/re2/re2/re2.h",
      "third_party/re2/re2/regexp.cc",
      "third_party/re2/re2/regexp.h",
      "third_party/re2/re2/set.cc",
      "third_party/re2/re2/set.h",
      "third_party/re2/re2/simplify.cc",
      "third_party/re2/re2/stringpiece.h",
      "third_party/re2/re2/tostring.cc",
      "third_party/re2/re2/unicode_casefold.cc",
      "third_party/re2/re2/unicode_casefold.h",
      "third_party/re2/re2/unicode_groups.cc",
      "third_party/re2/re2/unicode_groups.h",
      "third_party/re2/re2/variadic_function.h",
      "third_party/re2/re2/walker-inl.h",
      "third_party/re2/util/arena.cc",
      "third_party/re2/util/arena.h",
      "third_party/re2/util/atomicops.h",
      "third_party/re2/util/flags.h",
      "third_party/re2/util/hash.cc",
      "third_party/re2/util/logging.h",
      "third_party/re2/util/mutex.h",
      "third_party/re2/util/rune.cc",
      "third_party/re2/util/sparse_array.h",
      "third_party/re2/util/sparse_set.h",
      "third_party/re2/util/stringpiece.cc",
      "third_party/re2/util/stringprintf.cc",
      "third_party/re2/util/strutil.cc",
      "third_party/re2/util/utf.h",
      "third_party/re2/util/util.h",
    ]

    include_dirs = [
      "//third_party/re2",
    ]
  }

  executable("sg") {
    deps = [
      ":sglib",
    ]

    sources = [
      "src/core/entry.cc",
      "src/main.cc",
    ]

    include_dirs = [
      "//third_party/nanovg/src",
    ]

    libs = [
      "gdi32.lib",
      "user32.lib",
    ]
  }

  executable("sg_test") {
    deps = [
      ":sglib",
    ]
    sources = [
      "src/ui/test_stubs.cc",
      "src/ui/docking_test.cc",
      "src/ui/source_view/lexer_test.cc",
      "src/ui/tree_grid_test.cc",

      "third_party/gtest-1.7.0/src/gtest_main.cc",
      "third_party/gtest-1.7.0/src/gtest-all.cc",
    ]

    include_dirs = [
      "//third_party/re2",
      "third_party/gtest-1.7.0/include",
      "third_party/gtest-1.7.0",
    ]

    defines = [
      "GTEST_HAS_SEH=0",
    ]

    libs = [
      "gdi32.lib",
      "user32.lib",
    ]
  }
}
